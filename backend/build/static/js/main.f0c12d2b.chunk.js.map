{"version":3,"sources":["Resource Teaching Platform/RTP.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisable","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","RTP","resetForm","alert","msg","console","log","setInputValue","buttonDisabled","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c12d2b.chunk.js","sourcesContent":["import { extendObservable} from 'mobx';\r\n\r\nclass RTP {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new RTP();","import React from 'react'\r\n\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"inputfield\">\r\n\r\n        <input \r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={(e)=> this.props.onChange(e.target.value)}\r\n        />\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n}\r\nexport default InputField;\r\n","import React from 'react'\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"submitbutton\">\r\n      \r\n        <button\r\n            className = 'btn'\r\n            disabled={this.props.disabled}\r\n            onClick={ ()=> this.props.onClick()}\r\n        >\r\n            {this.props.text}\r\n\r\n        </button>\r\n\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n}\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport RTP from './Resource Teaching Platform/RTP';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisable: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val){\r\n        val = val.trim();\r\n        if (val.length>12){\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm (){\r\n        this.setState({\r\n            username:'',\r\n            password:'',\r\n            buttonDisable: false\r\n        })\r\n    }\r\n\r\n    async doLogin(){\r\n\r\n        if (!this.state.username){\r\n            return;\r\n        }\r\n        if (!this.state.password){\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisable: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res= await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success){\r\n                RTP.isLoggedIn =true;\r\n                RTP.username= result.username;    \r\n            }\r\n\r\n            else if ( result && result.success === false){\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n            \r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"loginForm\">\r\n        \r\n        log in \r\n        <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.username : ''}\r\n            onChange= { (val)=> this.setInputValue ('username', val)}\r\n        />\r\n\r\n        <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.password : ''}\r\n            onChange= { (val)=> this.setInputValue ('password', val)}\r\n\r\n        />\r\n\r\n        <SubmitButton\r\n            text='Login'\r\n            disabled={ this.state.buttonDisabled}\r\n            onClick= {()=> this.doLogin() }\r\n        />\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n}\r\nexport default LoginForm;\r\n","import React          from 'react';\nimport { observer }  from 'mobx-react';\nimport RTP            from './Resource Teaching Platform/RTP';\nimport LoginForm      from './LoginForm';\nimport InputField     from './InputField';\nimport SubmitButton   from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try {\n\n        let res = await fetch('/isLoggedIn', {\n          method: 'post',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n\n        let result = await res.json();\n\n        if (result && result.success) {\n          RTP.loading= false;\n          RTP.isLoggedIn = true;\n          RTP.username = result.username;\n\n        }\n\n        else {\n          RTP.loading= false;\n          RTP.isLoggedIn = false;\n\n        }\n    \n\n    }\n\n    catch(e){\n      RTP.loading= false;\n          RTP.isLoggedIn = false;\n\n    }\n  }\n\n  async doLogout() {\n    try {\n\n        let res = await fetch('/logout', {\n          method: 'post',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n\n        let result = await res.json();\n\n        if (result && result.success) {\n          RTP.isLoggedIn = false;\n          RTP.username = '';\n        }\n\n        \n\n    }\n\n    catch(e){\n      console.log(e)\n\n    }\n  }\n\n  render() {\n\n    if (RTP.loading) {\n      return (\n      <div className=\"app\">\n        <div className= 'container'>\n          Loading Please Wait....\n          </div>\n    </div>\n\n      );\n    }\n\n    else {\n\n      if (RTP.isLoggedIn)\n      return (\n        <div className=\"app\">\n          <div className= 'container'>\n            Welcome {RTP.username}\n\n            <SubmitButton\n                text={'Log Out'}\n                disabled={false}\n                onClick={()=> this.doLogout() }\n            />\n            </div>\n      </div>\n  \n        );\n\n    }\n\n\n    return (\n        <div className=\"app\">\n          <div className= 'container'>\n            <LoginForm />\n\n          </div>\n\n        </div>\n    );\n}\n\n}\nexport default observer (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}